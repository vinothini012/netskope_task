name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install Flask==2.0.3
        pip install SQLAlchemy==1.4.27
        pip install pyjwt==2.3.0
        pip install requests==2.26.0
        pip install urllib3==1.26.7
        pip install jsonschema==4.3.3
        pip install pylint==2.12.2
        pip install flake8==4.0.1
        pip install pytest==6.2.5
        pip install coverage==6.2
        pip install safety==1.10.3
        pip install PyGithub==1.55
        pip install python-dotenv==0.19.2

    - name: Run safety check
      run: safety check

    - name: Run tests
      run: pytest

    - name: Check for critical vulnerabilities
      id: vulnerability-check
      run: |
        SAFETY_OUTPUT=$(safety check --json)
        CRITICAL_COUNT=$(echo "$SAFETY_OUTPUT" | jq '[.[] | select(.vulnerability_severity == "critical")] | length')
        echo "CRITICAL_COUNT=$CRITICAL_COUNT" >> $GITHUB_ENV

    - name: Comment on pull request
      if: env.CRITICAL_COUNT > 0
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body 'Block: Critical vulnerabilities found.'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Auto-merge pull request
      if: env.CRITICAL_COUNT == 0
      run: |
        gh pr merge ${{ github.event.pull_request.number }} --auto --squash --subject "Automated merge"
        gh pr comment ${{ github.event.pull_request.number }} --body 'Successful: No critical vulnerabilities found.'
